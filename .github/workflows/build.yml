name: Build JAR

on: push: branches: [ main, master ] paths-ignore: - '/*.md' - '/.png' - '**/.jpg' - '/*.jpeg' - '/*.gif' pull_request: workflow_dispatch:

Optional: publish release JARs when you push a tag like v1.0.0

push: tags: - 'v*'

jobs: build: name: Build (Gradle) runs-on: ubuntu-latest permissions: contents: read steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 submodules: recursive

- name: Set up JDK 21 (Temurin)
    uses: actions/setup-java@v4
    with:
      distribution: 'temurin'
      java-version: '21'
      cache: 'gradle'

  - name: Validate Gradle Wrapper
    uses: gradle/wrapper-validation-action@v2

  - name: Make gradlew executable
    run: chmod +x gradlew

  - name: Build with Gradle
    uses: gradle/gradle-build-action@v3
    with:
      arguments: >-
        build --stacktrace --no-daemon

  - name: Collect production JARs
    shell: bash
    run: |
      set -euo pipefail
      mkdir -p artifacts
      shopt -s globstar nullglob
      for f in **/build/libs/*.jar; do
        case "$f" in
          *-sources.jar|*-javadoc.jar|*-dev.jar|*-tests.jar) ;;
          *) cp "$f" artifacts/ ;;
        esac
      done
      echo "Collected:" && ls -lah artifacts

  - name: Upload artifacts
    uses: actions/upload-artifact@v4
    with:
      name: jars
      path: artifacts
      if-no-files-found: error
      retention-days: 7

release: name: Release (on tag) needs: build if: startsWith(github.ref, 'refs/tags/') runs-on: ubuntu-latest permissions: contents: write steps: - name: Download build artifacts uses: actions/download-artifact@v4 with: name: jars path: release

- name: Create GitHub Release
    uses: softprops/action-gh-release@v2
    with:
      files: release/*.jar
      generate_release_notes: true
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

